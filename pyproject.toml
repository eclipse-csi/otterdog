[tool.poetry]
name          = "otterdog"
version       = "0.8.0"
description   = "Tool to manage GitHub organizations and their repositories."
authors       = ["Thomas Neidhart <thomas.neidhart@eclipse-foundation.org>"]
readme        = "README.md"
license       = "Eclipse Public License 2.0 (EPL-2.0)"
homepage      = "https://github.com/eclipse-csi/otterdog"
repository    = "https://github.com/eclipse-csi/otterdog"
documentation = "https://otterdog.readthedocs.io"
keywords      = ["infrastructure-as-code", "supply-chain-security", "github", "gitops"]

packages      = [
    { include = "otterdog" }
]

include       = [
    "CHANGELOG.md",
    "README.md",
    { path = "tests", format = "sdist" }
]

exclude       = [
    "otterdog/app.py",
    "otterdog/webapp"
]

classifiers   = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: Eclipse Public License 2.0 (EPL-2.0)",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Topic :: Security",
    "Topic :: Software Development :: Version Control",
    "Topic :: System :: Systems Administration",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python               = "^3.10"
aiofiles             = "^24.1"
aiohttp              = "^3.10"
aiohttp-client-cache = ">=0.12.3"
aiohttp-retry        = "^2.8.3"
aiosqlite            = "^0.20"
aioshutil            = "^1.5"
chevron              = "^0.14"
click                = "^8.1"
colorama             = "^0.4"
gojsonnet            = "^0.20"
importlib_resources  = "^5.12"
jsonata-python       = "^0.5"
jsonschema           = "^4.21"
jwt                  = "^1.3"
mintotp              = "^0.3"
playwright           = "^1.44"
JSONBender           = "^0.9"
PyNaCl               = "^1.5"
requests             = "^2.32"
GitPython            = "^3.1"

[tool.poetry.group.app.dependencies]
quart                = "^0.19"
quart-flask-patch    = "^0.3"
python-decouple      = "^3.8"
python-dotenv        = "^1.0"
pymongo              = "==4.9.1"
pydantic             = "^2.7"
odmantic             = "^1.0"
quart-auth           = "^0.9"
quart-redis          = "^2.0"
github-flask         = "^3.2"
aiohttp-client-cache = {version=">=0.12.3", extras=["redis"]}
ariadne              = "^0.22"
pyyaml               = "^6.0"


[tool.poetry.group.dev.dependencies]
ruff       = "^0.6"
mypy       = "^1.8"
pre-commit = "^3.3"

[tool.poetry.group.test.dependencies]
pytest         = "^7.3"
pytest-asyncio = "^0.23"
parameterized  = "^0.9"

[tool.poetry.group.typing.dependencies]
types-colorama   = "^0.4"
types-requests   = "^2.31"
types-jsonschema = "^4.17"
types-chevron    = "^0.14"
types-aiofiles   = "^23.2"
types-redis      = "^4.6"
types-PyYAML     = "^6.0"
motor-types      = ">=1.0.0b4"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs             = "^1.5"
mkdocs-material    = "^9.5"
mkdocs-exclude     = "^1.0"
pymdown-extensions = "^10.7"

[tool.poetry.scripts]
otterdog     = "otterdog.cli:cli"

[build-system]
requires      = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "7.2"
testpaths  = ["tests"]
pythonpath = [".", "otterdog"]

log_cli             = true
log_cli_level       = "INFO"
log_cli_format      = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

[tool.mypy]
python_version = "3.10"
exclude        = ["scripts", "docs", "tests"]

[tool.ruff]
line-length    = 120
indent-width   = 4
target-version = "py310"

[tool.ruff.lint]
extend-select = [
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "ERA", # flake8-eradicate/eradicate
    "I",   # isort
    "N",   # pep8-naming
    "PIE", # flake8-pie
    "PGH", # pygrep
    "RUF", # ruff checks
    "SIM", # flake8-simplify
    "T20", # flake8-print
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "UP",  # pyupgrade
]
ignore = [
    "E203",
    "ERA001", # commented out code
    "PGH003", # specific ignore
    "PGH004", # specific ignore
    "SIM102", # nested ifs
    "SIM103", # inline return
    "N818"    # exception names
]

[tool.ruff.lint.per-file-ignores]
"**/db/models.py" = ["UP007", "TCH003"] # new optional spec is not yet supported by odmantic
"**/webhook/github_models.py" = ["TCH003"]
